// YOU HAVE A FOLDER WITH LIBRARIES. YOU WANT TO MOVE THEM TO ANOTHER FOLDER, AND NAME THEM TOO. ALSO SECURE AT THE END
// OUTPUT: /root/libs/libtype/libname-version
computer = get_shell.host_computer
if active_user != "root" then exit("liborg:  permissions are required")
if params.len < 1 then exit("liborg usage: [source_folder] (destination_folder) (metaxploit_folder)")
if params.len == 3 then
    metaxploit_path = params[2]
    metaxploit = include_lib(metaxploit_path + "/metaxploit.so")
    if not metaxploit then exit("liborg error: can't find metaxploit at "+metaxploit_path)
    folder_to_param = params[1]
else if params.len == 2 then 
    metaxploit_path = ("/lib/metaxploit.so")
    metaxploit = include_lib("/lib/metaxploit.so")
    if not metaxploit then exit("liborg error: can't find metaxploit at /lib/metaxploit.so")
    folder_to_param = params[1]
else if params.len == 1 then 
    print("liborg: using /root/libs as destination.")
    metaxploit = include_lib("/lib/metaxploit.so")
    if not metaxploit then exit("liborg error: can't find metaxploit at /lib/metaxploit.so")
    folder_to_param = "/root/libs"
end if
folder_from_param = params[0]

folder_from = computer.File(folder_from_param)
if folder_from == null then 
    exit("liborg error: source folder not found")
end if
if folder_from.is_folder() != true then 
    exit("liborg error: source folder is not a folder")
end if

folder_to = computer.File(folder_to_param)
if folder_to == null then 
    print("liborg: " +folder_to_param+" doesnt exist, creating...")
    folder_path_list = folder_to_param.split("/")
    folder_name = folder_path_list.pop
    folder_path = folder_path_list.join("/")
    computer.create_folder(folder_path, folder_name)
    folder_to = computer.File(folder_to_param)
end if
if folder_to.is_folder() != true then exit("liborg error: destination folder is not a folder")

files = folder_from.get_files()
libtypes = []
for file in files
    filepath = file.path
    library = metaxploit.load(filepath)
    if typeof(library) == "MetaLib" then
        //parsing :(
        libname = library.lib_name.split("\.so").pull()
        libver = library.version
        if libname.indexOf("lib") != null then libname = libname.split("lib").pop()
        if libtypes.indexOf(libname) == null then libtypes.push(libname)
        fileobject = computer.File(filepath)
        if computer.File(folder_to_param+"/"+libname) == null then
            print(folder_to_param+"/"+libname+" doesnt exist, creating...")
            computer.create_folder(folder_to_param, libname)
        end if
        print(libname + "-" + libver +" >>> " + folder_to_param+"/"+libname)
        errorstring = fileobject.move(folder_to_param+"/"+libname , libname + "-" + libver)  
        if errorstring != 1 then print(errorstring)
    end if
end for
folder_to.chmod("o-rwx", 1)
folder_to.chmod("u-rwx", 1)
folder_to.chmod("g-rwx", 1)
folder_to.set_owner("root", 1)
folder_to.set_group("root", 1)
folder_from.chmod("o-rwx", 1)
folder_from.chmod("u-rwx", 1)
folder_from.chmod("g-rwx", 1)
folder_from.set_owner("root", 1)
folder_from.set_group("root", 1)
print("liborg: folders secured")